# ~/.bashrc: executed by bash(1) for non-login shells.

force_color_prompt=yes


### CASES / CONDITIONALS ###

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
  # We have color support; assume it's compliant with Ecma-48
  # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
  # a case would tend to support setf rather than setaf.)
  color_prompt=yes
    else
  color_prompt=
    fi
fi


if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[01;31m\] $(parse_git_branch)\[\033[00m\] \$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w $(parse_git_branch) \$ '
fi
unset color_prompt force_color_prompt

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# enable programmable completion features
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

if [[ -f ~/.git-completion.bash ]]; then
    source ~/.git-completion.bash
fi
complete -o default -o nospace -F _git g

### COLORS ###
BLUE="\033[38;5;39m\]"
GREEN="\033[38;5;47m\]"
GREY="\033[38;5;7m\]"
WHITE="\033[38;5;15m\]"
YELLOW="\033[38;5;11m\]"

### ENVIRONMENT VARIABLES ###
export EDITOR=vim
export HISTCONTROL=ignoreboth:erasedups
export HISTSIZE=1000
export HISTFILESIZE=200000
export HISTTIMEFORMAT="%e %b %R: "
export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

export PS1='\[\033[38;5;39m\][${PWD#"${PWD%/*/*}/"}] \
\[\033[38;5:47m\]$(parse_git_branch) \
\[\033[38;5;15m\]$ $(tput sgr0)'

# export PS1="\[$BLUE[\w] \[$(tput sgr0)\]\[$GREEN\$(parse_git_branch) \[$(tput sgr0)\]\[$WHITE\\$ \[$(tput sgr0)\]"
export REQUEST_CA_BUNDLE=/usr/local/share/ca-certificates/gd_bundle-g2.crt
export VAULT_ADDR=https://vault.spaceflightindustries.com:8200
export WORKON_HOME=$HOME/.virtualenvs


### OPTIONS ###
shopt -s cdspell  # Autocorrect fudged paths in cd calls
shopt -s checkwinsize
shopt -s cmdhist
shopt -s dotglob
shopt -s extglob
shopt -s histappend

set completion-ignore-case On

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"


### PATHS ###

export PATH=/usr/local/bin:$PATH
export PATH=/usr/local/sbin:$PATH
export PATH="$PATH:$HOME/bin/arc/arcanist/bin"

export PYTHONPATH="$HOME/Code/"
export PYTHONPATH=$PYTHONPATH:.

### ALIASES ###
if [ -f ~/.bash_aliases ]; then
. ~/.bash_aliases
fi

### FUNCTIONS ###
if [ -f ~/.bash_fxs ]; then
. ~/.bash_fxs
fi
