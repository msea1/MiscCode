digraph {
	subgraph cluster_sat {
		label=SATELLITE style=dotted
		image [label=downlink_image shape=oval]
		metadata [label=downlink_metadata shape=oval]
	}
	image -> xband_radio [color=red]
	image -> xband_radio [color=purple]
	metadata -> xband_radio [color=red]
	subgraph clustergroundstation {
		label="GROUND STATION"
		xband_radio [label=radio shape=doubleoctagon]
		rlm [label=sfx_file_monitor shape=oval]
		sft_file [label=<sft_file_transfer<BR/><I>via sft-packet-router</I>> shape=oval]
		trebuchet [shape=doubleoctagon]
	}
	rlm -> xband_radio [arrowhead=inv color=red dir=forward]
	sft_file -> xband_radio [arrowhead=inv color=red dir=forward]
	rlm -> trebuchet [color=darkgreen]
	sft_file -> trebuchet [color=darkgreen]
	trebuchet -> files_s3 [color=red]
	trebuchet -> env_files [color=blue]
	pdp -> env_files [arrowhead=inv color=blue dir=forward]
	subgraph clusteraws {
		color=lightgrey label=AWS style=filled
		files_s3 [label=files shape=cylinder]
		obscura_queue [label=<obscura_queue<BR/><I>ENV-obscura-requests</I>> shape=note]
		env_files [label=<files from trebuchet<BR/><I>groundstation-ENV-files</I>> shape=note]
		final_product [label=<products<BR/><I>images-ENV-obscura-products</I>> shape=note]
	}
	subgraph clustergemini {
		label=GEMINI style=dotted
		pdp [label=<pass-data-processor<BR/><I>file_listener.py</I>> shape=doubleoctagon]
		satmodel [label="satellite model" shape=doubleoctagon]
		compliance [label="image order compliance" shape=doubleoctagon]
		planner [label=<mission planner<BR/><I>task data</I>> shape=doubleoctagon]
		cmd_gen [label=<command<BR/>generator> shape=doubleoctagon]
		subgraph clusterobscura {
			label=OBSCURA style=dashed
			img_req [label=ImageRequest shape=doubleoctagon]
			single_instance [label=<Single-image<BR/>instance> shape=doubleoctagon]
			multi_instance [label=<Multi-image<BR/>instance> color=purple shape=doubleoctagon]
			multi [label="Multi Check" color=purple shape=doubleoctagon]
			upload [label=Upload shape=doubleoctagon]
			get_sfx [label="SFX file" shape=oval]
			get_metadata [label="image metadata" shape=oval]
			get_task [label="task metadata" shape=oval]
			examine_task [label=<compare accuracy<BR/>vs task data> shape=oval]
			post_process_check [label=<Part of multi<BR/>order and all<BR/>images processed?> color=purple shape=oval]
		}
	}
	pdp -> satmodel [arrowhead=inv color=red dir=forward]
	pdp -> cmd_gen [arrowhead=inv color=red dir=forward]
	pdp -> files_s3 [color=red]
	pdp -> obscura_queue [color=blue]
	img_req -> obscura_queue [arrowhead=inv color=blue dir=forward]
	img_req -> get_sfx [arrowhead=inv color=red dir=forward]
	img_req -> get_task [arrowhead=inv color=red dir=forward]
	get_sfx -> files_s3 [color=red dir=both]
	img_req -> get_metadata [arrowhead=inv color=red dir=forward]
	get_metadata -> pdp [arrowhead=inv color=red dir=forward]
	get_task -> planner [arrowhead=inv color=red dir=forward]
	img_req -> single_instance [color=blue]
	single_instance -> examine_task [color=darkgreen]
	single_instance -> upload [color=blue]
	multi_instance -> upload [color=purple]
	upload -> multi [color=purple]
	upload -> final_product [color=red]
	multi -> post_process_check [color=purple]
	post_process_check -> satmodel [label=No color=purple]
	post_process_check -> multi_instance [label=" Yes" color=purple]
	upload -> compliance [color=darkgreen]
	subgraph clusterlegend {
		label=LEGEND
		a [label=service shape=doubleoctagon]
		b [label=function shape=oval]
		c [label="data store" shape=cylinder]
		d [label="sqs queue" shape=note]
		e [label="N/A" shape=oval]
		a -> b [label=" foo()" color=darkgreen]
		b -> c [label=" pull data" arrowhead=inv color=red]
		c -> d [label=" SQS" color=blue]
		d -> e [label=" new" color=purple]
	}
	overlap=scale
	overlap_shrink=true
}
